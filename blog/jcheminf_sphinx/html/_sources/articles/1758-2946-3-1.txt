CurlySMILES: a chemical language to customize and annotate encodings of molecular and nanodevice structures
===========================================================================================================

Abstract
********

CurlySMILES is a chemical line notation which extends SMILES with annotations for storage, retrieval and modeling of interlinked, coordinated, assembled and adsorbed molecules in supramolecular structures and nanodevices. Annotations are enclosed in curly braces and anchored to an atomic node or at the end of the molecular graph depending on the annotation type. CurlySMILES includes predefined annotations for stereogenicity, electron delocalization charges, extra-molecular interactions and connectivity, surface attachment, solutions, and crystal structures and allows extensions for domain-specific annotations. CurlySMILES provides a shorthand format to encode molecules with repetitive substructural parts or motifs such as monomer units in macromolecules and amino acids in peptide chains. CurlySMILES further accommodates special formats for non-molecular materials that are commonly denoted by composition of atoms or substructures rather than complete atom connectivity.

Background
**********

CurlySMILES (Curly-braces enhanced Smart Material Input Line Entry Specification) is introduced as a chemical language for the specification of chemical materials and supramolecular structures. The CurlySMILES approach provides a flexible format to encode patterns in materials and molecule-based architectures. CurlySMILES includes its own set of symbols, descriptors and rules to denote respective entities and also modifies the well-established SMILES language.

SMILES is based on a set of rules that allow the representation of a molecular structure as a sequence of atom and bond symbols in a single word or string \ [#B1]_\ [#B2]_\ [#B3]_. Unique SMILES strings are suitable as database keys while storing the structural information within the key itself \ [#B4]_. Since SMILES notations are constructable from molecular principle, namely the molecular graph, notations can be derived for virtual, not-yet-synthesized chemical species. The flexibility and portability of SMILES has been demonstrated by its use in modeling and property estimation software \ [#B5]_\ [#B6]_\ [#B7]_\ [#B8]_\ [#B9]_ and combinatorial libraries \ [#B10]_\ [#B11]_.

SMILES is bridging the opposite ends of human-friendly molecular drawings, achieved with molecule editors \ [#B12]_\ [#B13]_, and computer-friendly connection tables (matrices), both used in representing molecular structures. Molecular information collapsed into a compact SMILES string can efficiently be managed by computer programs and stored in markup language fields, like the \ [#B14]_.

SMILES comes in various dialects with modifications or minor extensions of the originally published language. Implementations of SMILES parsers differ with respect to the treatment and acceptance of additionally introduced symbols and syntax \ [#B2]_. SMILES also has been extended to encode a peptide or peptoid sequence on monomer level \ [#B15]_ and in template format \ [#B16]_.

Recently, the IUPAC International Chemical Identifier (InChI) has been designed as a string-based identifier for chemical substances \ [#B17]_. Like a SMILES notation, an InChI string is derived from a molecular structure representations. However, InChI is intended for "behind-the scenes" use by computers. It is typically derived from structure representations by software, whereas SMILES handily supports molecular communication between humans and computers.

The user-friendliness and popularity of SMILES encouraged us to modify this chemical language for communication of molecular architectures that can not adequately be encoded with the current SMILES language and its derivatives. CurlySMILES modifies the SMILES language by including a novel format to encode molecular details and extra-molecular features such as non-covalent interactions and attachment to a biomolecule as well as the surface of a substrate material or nanoparticle. CurlySMILES is designed with an open format to provide users with choices of integrating shorthands such as aliases or compaction of repetitive structural units. In the following, formats and rules for constructing CurlySMILES notations are described. Applications of CurlySMILES for document annotation and chemical search are then discussed.

Results
*******

CurlySMILES notation
^^^^^^^^^^^^^^^^^^^^

A CurlySmiles notation is a string of dot-separated component notations. A component notation can either be a plain SMILES, an annotated SMILES, or a special format notation. A plain notation maintains the grammar and rules of the known SMILES language. A plain notation is modified by introducing attributes, such as structural variations, details and decorations, enclosed in curly braces. An annotation can be anchored to a particular atomic node or placed at the end of a SMILES component. A special format notation begins with an opening and ends with a closing curly brace and includes an alias or a notation for a structure that defies molecular-graph encoding. A string with exactly one component notation is referred to as a unary CurlySMILES notation.

A CurlySMILES notation is typically not unique since the SMILES language allows for alternate notations by selecting a starting atom arbitrarily. Further, CurlySMILES provides flexible annotations formats that leaves it to a user or application software to add and granulate details. The clear separation of attributes from the molecular-graph encoding, however, provides applications with options to match and screen notations in large data sets with precedence to attributes, while deferring molecular-connectivity processing to a later stage, at which only a selected set of candidates will be considered.

Here, we focus on the core format of CurlySMILES, outlining the basic syntax that can be extended into different domains of future interest. Example notations are supplied for selected molecules and materials, demonstrating how to represent a targeted structure or a generically defined class of structures. More examples are available in Additional file \ [#B18]_\ [#B19]_.

Additional file 1

**CurlySMILES encoding examples**. The encoding examples illustrate the application of CurlySMILES formats and rules to derive linear notations for selected structures including stereoisomers, fragments, ring molecules with delocalized charge, coordination compounds, macromolecules, nanostructures as well as doped and surface-functionalized materials.

Click here for file

Example notations are displayed in monospace font. Parts of a CurlySMILES notation, which are given in *italics*, present descriptive metalanguage text meant to be replaced by code in CurlySMILES format.

Multiplier
^^^^^^^^^^

A shorthand format is introduced to encode multiple occurrences of the same component notation. The multiplier is an integer greater than one and enclosed in curly braces. It is appended to a component notation as illustrated for cobalt(II) nitrate hexahydrate (Co(NO\ :sub:`3`\ \ :sub:`2`\ \ :sub:`2`\ 





A multiplier is not considered an annotation. If annotations occur at the end of a component notation, they have to precede the multiplier.

Alias
^^^^^

An alias is a short form for a component notation. An alias is enclosed in curly braces. CurlySMILES distinguishes between predefined and customer-defined aliases.

This distinction is critical for the implementation of a CurlySMILES parser. Look-up of the replacement notation for an alias is internal for a predefined alias, whereas customer-defined aliases require submission of a look-up dictionary by the customer.

An alias begins with a letter or a dollar sign followed by zero or more alphanumerical, hyphen, underscore, plus sign and round bracket characters. For example, we use commonly applied short notations for cations and anions of ionic liquids and solids, such as 



A customer-defined alias has to be indicated by a preceding dollar sign, allowing for notations like the following:

*myCation*}.{$*myAnion*}.{$*mySolvate*}{4}

Stoichiometric formula notation
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

A stoichiometric formula notation (SFN) is defined to encode materials with known atomic or substructural stoichiometry, but without a discrete pattern of finite atom connectivity (molecular structure) that could be captured in a SMILES notation. SFNs are particularly useful for encoding a broad range of solids. Further, many homo- and hetero-polyatomic clusters with complex atom connectivity can be encoded as SFNs in a compact, yet distinctive manner. CurlySMILES applies an SFN format that resembles the nomenclature typically used to name compounds by their stoichiometric composition \ [#B20]_, but eliminates the use of sub- and superscript markup. Multiple entries of the same atomic symbol are allowed and the symbols may occur in any order. A stoichiometric integer directly follows a symbol, whereas an isotope label precedes a symbol and is marked with the ^ character; for example \ :sup:`13`\ C. Further, selected atomic symbols may be grouped by enclosing them within round braces. If a stoichiometric integer applies to a group, it immediately follows the closing round brace. Finally, a charge notation 

To distinguish an SFN-encoded component from an alias or a composite notation, an asterisk (*SFN*}

\ :sub:`23`\ C\ :sub:`6`\ 

\ :sub:`5`\ \ :sup:`4+`\ 

\ :sub:`3`\ (CO\ :sub:`3`\ )\ :sub:`2`\ (OH)\ :sub:`2`\  (carbonate mineral)

Groups in an SFN notation can be nested to any depth level:

\ :sub:`2`\ )]

Notice that the SFN format also accommodates structures with molecular connectivity. It is the user's choice to encode such structures as SFN or SMILES notations. When in doubt about the topological description of a structure or when isomeric forms should intentionally be included, SFN is the notation of choice.

An SFN can appear within a special format notation for a component, within a composite notation to encode a constituent (see next section) and within a SMILES annotation.

Composite notation
^^^^^^^^^^^^^^^^^^

Composite or hybrid materials are made from constituents that remain separate and distinct, even on an above-nanoscale level (mesoscale). The constituents should not be encoded by dot-separated notations, a format which should be reserved for compounds in which the different species interact with each other on a molecular/ionic level rather than on an interface or grain-boundary level. CurlySMILES defines a special format for encoding composites and other materials built from interface-connected phases:

*constituent*#1/*constituent*#2/.../*constituent*#n}

Herein, *constituent*#i\ [#B21]_ is encoded as

\ :sub:`2`\ 

The first constituent is presented as an annotated SMILES notations, using the macromolecule syntax introduced below, and the second constituent is presented as SFN.

Plain SMILES notation
^^^^^^^^^^^^^^^^^^^^^

A component notation that does not begin with an opening curly brace is a plain SMILES or an annotated SMILES notation. A plain SMILES notation is encoded with the grammar and rules of the SMILES language \ [#B1]_. A plain notation contains atomic node code (ANC) and may contain bond symbols and special characters to denote branching and ring formation. An ANC is either a bare atomic symbol or a square bracket atomic code (SQC) which includes an atomic symbol and, depending on the targeted structure, additional characters to denote the number of adjacent hydrogen atoms, a charge value, and an isotope label. CurlySMILES includes the symbols 

CurlySMILES requires an atomic wildcard always to be encoded as a SQC. For example, the notation \ [#B22]_ as a wildcard-like any-bond symbol. Unless the bound atoms are encoded by wildcards, a bond is predetermined by the element type of the adjacent atoms and their orbital interactions. Whereas the atomic wildcard is a placeholder for atomic symbols, the symbol for an unspecified bond has not primarily the role of a bond placeholder; rather, it indicates bond-type ambiguity with respect to the limited classification scheme of single, double, triple, quadruple and aromatic bonds. CurlySMILES treats the character ~ as a bond symbol that encodes a bond, which cannot adequately be encoded as a covalent bond with symbols 

Annotated SMILES notation
^^^^^^^^^^^^^^^^^^^^^^^^^

A plain notation is annotated by inserting one or more curly-enclosed annotations into the notation. An annotation has to be either anchored at a particular atomic node or appended to the end. An atom-anchored annotation (AAA) directly follows the ANC. The only characters allowed to occur between an AAA and ANC are digits that designate ring-closing. A component-anchored annotation (CAA) follows the last ANC, including its AAAs, but precedes the multiplier, if any is present in the component notation. AAA types include stereodescriptive and structural unit annotations as well as group environment, molecular detail and operational annotations. CAA types include state and shape annotations and miscellaneous interest annotations. In the following text we use the term annotation to refer to the content between the curly braces.

A stereodescriptive annotation consists of one of the upper-case letters *cis*/*trans* isomers by using the *E*/*Z* convention. Examples E1 and E2 in Additional file 

A structural unit annotation defines a boundary of a structural unit. This boundary is an open or dangling bond. The annotation consists of a one-character boundary descriptor, which is a CurlySMILES bond symbol (

Stereodescriptive and structural unit annotations consist of exactly one character, while all other annotation types require a two-character annotation marker (AM), which is optionally followed by an annotation dictionary to specify attributes. The general format for a dictionary-containing annotation,

*AMk*\ :sub:`1`\ =*v*\ :sub:`1`\ ;*k*\ :sub:`2`\ =*v*\ :sub:`2`\ ;...;*k*\ :sub:`n`\ =*v*\ :sub:`n`\ },

employs a semicolon-separated list of dictionary entries. An entry is a key/value pair, *k*\ :sub:`i`\ /*v*\ :sub:`i`\ \ [#B23]_.

A group environment annotation marker (GEAM) starts with a bond symbol (

A molecular detail annotation starts with an exclamation mark. The second character of a molecular detail annotation marker (MDAM) is 

The first character of an operational annotation marker (OPAM) is a plus sign. The following character is a letter. An upper-case letter indicates formal addition or substitution of a structural part. A lower-case letter indicated formal repetition of an annotated unit. OPAMs 

A state and shape annotation is denoted by a state and shape annotation marker (SSAM) consisting of two lower-case letters. SSAM annotations qualitatively describe the physicochemical state, phase structure and/or the nano- or mesoscale characteristics of a material \ [#B24]_. Examples E15 to E18 in Additional file 

A miscellaneous interest annotation is denoted by a two-character miscellaneous annotation marker (MIAM). Examples E19 and E20 in Additional file 

The following two examples demonstrate the combined use of annotations to encode molecular arrangements.

The imidazolium functionalized SiO\ :sub:`2`\  surface \ [#B25]_ in Figure \ :ref:`1<figure_1>` is encoded in CurlySMILES by applying the group environment annotation format. The two O atoms, which attach the molecular species to the material surface, are annotated with the 

.. _figure_1:

.. figure:: ../_static/1758-2946-3-1-1.jpg
   :align: center

   Figure 1. Alkylimidazolium ionic species immobilized on silica surface

   **Alkylimidazolium ionic species immobilized on silica surface**.




The material is SFN-encoded in a dictionary entry with key 

The functionalized calix[4]arene of the complex shown in Figure \ :ref:`2<figure_2>` is encoded by combining structural unit, group environment and operational annotations. The molecular ring is encoded as a fragment with two open bonds. The first is encoded as a structural unit annotation and the second as an operational annotation. Corresponding atomic nodes and annotations are given in boldface:

.. _figure_2:

.. figure:: ../_static/1758-2946-3-1-2.jpg
   :align: center

   Figure 2. Eu\ :sup:`3+`\  cation coordinated by a cryptand

   **\ :sup:`3+`\  cation coordinated by a cryptandEu**.


**c{-}**cc{-R}cc1**C{+rn=4}**

The \ :sup:`3+`\ /cryptand complex is given by encoding the rare-earth cation in SQC, annotated with the ligand notation:



The dictionary key 

Software
^^^^^^^^

A suite of Python modules have been implemented that perform parsing and molecular descriptor generation for CurlySMILES notations. These modules have been wrapped as software package `<http://www.axeleratio.com/csm/py/code/downloads.htm>`_.

Discussion
**********

Comparison of CurlySMILES with other SMILES modifications
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Versions of SMILES use the symbols *Cis* and *trans* isomers are denoted via directional bond symbols 

CurlySMILES introduces a format to mark a fragment or chemical group by using structural unit annotations. This allows distinction between a radical and a group. The SMILES notation [CH3] encodes a methyl radical. CurlySMILES uses the same notation to encode the radical, but encodes a methyl group as 

In a CurlySMILES notation, SMILES code is strictly separated and distinguishable from other parts in the notation by using curly braces. CurlySMILES uses marked annotations to define structures in generic terms or to construct molecular patterns with a tunable depth of information granularity. CurlySMILES provides completely new, extra-molecular patterns, such as 

CurlySMILES is designed for applications in specialized domains and for clients with particular tasks, including repetitive processing of certain structural entities. For this purpose, CurlySMILES includes various shorthand approaches, especially the alias format. Domain-specific abbreviations and codes for structures and materials are frequently used within chemical communities to replace long names and complex structural concepts. The alias format makes it possible to integrate those terms into notations and replace them when needed.

As a machine-readable code, a CurlySMILES notation (like SMILES or InChI) is a document-neutral representation (ASCII string) of a chemical structure that, supported by the methods in the supplied software package, can automatically be converted into a document specific format. Formula-based names of coordination compounds are a case in point.

Data mining and semantic search
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

A special feature of CurlySMILES is that it integrates textual parts, acronyms, other encoding schemes and client-defined aliases. Thus, a CurlySMILES notation can be used on various levels in search and data mining. CurlySMILES allows formulation of complex search pattern by using atomic-symbol placeholders and annotations that denote generic functional groups and compound classes. The annotation syntax of CurlySMILES makes it possible to associate a structural part with a specific role such as a structural repeat unit in a polymer, a substituent, ligand, cryptand, dopant, adsorbate or dissolved species. By implementing search and matching algorithm that include the information contained in CurlySMILES annotations, a plethora of search strategies can be envisioned, including precise, needle-in-the-hay-stack search and customer-focused report-and-review style extraction of chemical data.

Conclusions
***********

CurlySMILES is a chemical language for the communication of chemical information related to molecular structure and complex nanoscale architectures. This language offers a versatile approach in encoding material composition and structure by supplementing attention to extra-molecular features. Symbols and grammar of this language allow users to encode structures and to formulate context-annotated queries with variable granularity of molecular or supramolecular details. The open format makes it easy to extend the current version to application-specific tasks.

Abbreviations
*************

AAA: Atom-Anchored Annotation; AM: Annotation Marker; ANC: Atomic Node Code; CAA: Component-Anchored Annotation; CurlySMILES: Curly-braces enhanced Smart Material Input Line Entry Specification; GEAM: Group Environment Annotation Marker; InChI: IUPAC International Chemical Identifier; MDAM: Molecular Detail Annotation Marker; MIAM: Miscellaneous Interest Annotation Marker; OPAM: OPerational Annotation Marker; SFN: Stoichiometric Formula Notation; SMILES: Simplified Molecular Input Line Entry System; SQC: SQuare bracket atomic Code; SSAM: State and Shape Annotation Marker

Competing interests
*******************

The author declares that they have no competing interests.

Authors' contributions
**********************

AD designed the CurlySMILES language. AD has implemented software to parse and test CurlySMILES notation and to use them in CurlySMILES-annotated archives of chemical property data and bibliographic collections.

.. [#B1]  SMILES, a Chemical Language and Information System. 1. Introduction to Methodology and Encoding Rules

.. [#B2]  SMILES line notation

.. [#B3]  OpenSMILES Specification

.. [#B4]  SMILES. 2. Algorithm for Generation of Unique SMILES Notation

.. [#B5]  Handbook for Estimating Physicochemical Properties of Organic Compounds

.. [#B6]  SmilogP: A Program for a Fast Evaluation of Theoretical Log P from the SMILES Code of a Molecule

.. [#B7]  QSAR Modeling of Peripheral Versus Central Benzodiazepine Receptor Binding Affinity of 2-Phenylimidazol[1,2-a]pyridineacetamides using Optimal Descriptors Calculated with SMILES

.. [#B8]  Artificial Neural Networks in ADMET Modeling: Prediction of Blood-Brain Barrier Permeation

.. [#B9]  Chemical Descriptors Library (CDL): A Generic, Open Source Software Library for Chemical Informatics

.. [#B10]  SMILIB: Rapid Assembly of Combinatorial Libraries in SMILES Notation

.. [#B11]  SmiLib v2.0: A Java-Based Tool for Rapid Combinatorial Library Enumeration

.. [#B12]  Molecular structure input on the web

.. [#B13]  The PubChem chemical structure sketcher

.. [#B14]  XML-Based IUPAC Standard for Experimental, Predicted, and Critically Evaluated Thermodynamic Property Data Storage and Capture (ThermoML)

.. [#B15]  CHUCKLES: A Method for Representing and Searching Peptide and Peptoid Sequences on Both Monomer and Atomic Levels

.. [#B16]  CHORTLES: A Method for Representing Oligomeric and Template-Based Mixtures

.. [#B17]  The IUPAC International Chemical Identifier (InChI)

.. [#B18]  CurlySMILES encoding examples

.. [#B19]  Encoding examples for CurlySMILES notations

.. [#B20]  Nomenclature of Inorganic Chemistry

.. [#B21]  Poly(organophosphazene)s and the Sol-gel Technique

.. [#B22]  SMARTS - A Language for Describing Molecular Patterns

.. [#B23]  CurlySMILES: annotation dictionary keys

.. [#B24]  CurlySMILES: state and shape annotation

.. [#B25]  Supported ionic liquids: ordered mesoporous silicas containing covalently linked ionic species

